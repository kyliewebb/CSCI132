package linkedlistoutlab;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Kylie Webb
 * CSCI 132 - Political Riff Raff Outlab
 * 2/23/2016
 */

/**
 * MyLinkedList class for Political Riff Raff outlab
 * This class creates the node arrays and manages the order and placement of nodes
 * in the circular doubly linked list
 */
public class MyLinkedList {
    private Node cw;
    private Node ccw;
    private Node first;
    MyLinkedList list;
    int [] id = {};
    Scanner input = new Scanner(System.in);
    int idnum;
    int N;
    int k; //clockwise count
    int m; //counterclockwise count
    
    
    public MyLinkedList() throws IOException {
        BufferedReader br = null;
        System.out.print("Enter the file name with extension: ");
        FileReader file = new FileReader(input.nextLine());
        br = new BufferedReader(file);
        String line = br.readLine();
        String[] a = line.split(" ");
        N = Integer.parseInt(a[0]);
        k = Integer.parseInt(a[1]);
        m = Integer.parseInt(a[2]);
        for(int i = 0; i <= N; i++){
            add(new Node(new Member(i)));
            print();
        }
    }
    
    public void add(Node input){
        if(cw == null){
            cw = first;
            ccw = cw;
        }
        else{
            ccw.setCW(first);
            ccw = ccw.getCW();
        }
    }
    public void print() {
        Node iter = cw;
        while (iter != null) {
            System.out.println("ID: #" + iter.getID());
            System.out.println();
            iter = iter.getCW();
        }
    }

    public boolean removeID(int idnum) {
        Node iter = cw;
        Node lag = cw;
        while (iter != null) {
            if (idnum == (iter.getID())) {
                if (iter == cw) {
                    cw = cw.getCW();
                } else {
                    lag.setCW(iter.getCW());
                }
                lag.setCW(iter.getCW());
                iter.setCW(null);
                return true;
            } else {
                lag = iter;
                iter = iter.getCW();
            }
        }
        return false;
    }
}
